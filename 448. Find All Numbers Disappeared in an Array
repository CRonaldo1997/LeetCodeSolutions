import java.util.ArrayList;
import java.util.List;

//448. Find All Numbers Disappeared in an Array
//Given an array of integers where 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.
//
//Find all the elements of [1, n] inclusive that do not appear in this array.
//
//Could you do it without extra space and in O(n) runtime? You may assume the returned list does not count as extra space.
//
//Example:
//
//Input:
//[4,3,2,7,8,2,3,1]
//
//Output:
//[5,6]

public class FindAllNumbersDisappearedInArray {
	 
	public List<Integer> findDisappearedNumbers(int[] nums) {
		
		int len = nums.length;
		List<Integer> result = new ArrayList<>();
		List<Integer> numsArray = new ArrayList<>();
		for(int i : nums){
			numsArray.add(i);
		}
		
		for(int i=1; i<=len; i++){
			if(!numsArray.contains(i)){
				result.add(i);
			}
		}
		return result;
	    }
}
