//541. Reverse String II

//
//Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.
//Example:
//Input: s = "abcdefg", k = 2
//Output: "bacdfeg"
//Restrictions:
//The string consists of lower English letters only.
//Length of the given string and k will in the range [1, 10000]
		
public class RS2 {
	 public static String reverseStr(String s, int k) {
		 if(s.length()<=k){
			 StringBuilder sb = new StringBuilder(s);
			 return sb.reverse().toString();
		 }
		 
		 StringBuilder result = new StringBuilder();
		 for(int i=0; i<s.length(); i=i+k){
			 
			 if((i/k)%2 == 0){
				 if(i+k<=s.length()){
				 StringBuilder sb = new StringBuilder(s.substring(i, i+k));
				 result.append(sb.reverse());
				 }
				 else{
				 StringBuilder sb = new StringBuilder(s.substring(i, s.length()));
				 result.append(sb.reverse());
					 
				 }
			 }
			 else{
				 if(i+k<=s.length()){
				 StringBuilder sb = new StringBuilder(s.substring(i, i+k));
				 result.append(sb);
				 }
				 else{
				 StringBuilder sb = new StringBuilder(s.substring(i, s.length()));
				 result.append(sb);
				 }
			 }
		 }
		 return result.toString();
	        
	    }
	 
	 public static void main(String[] args){
		 System.out.println(reverseStr("abcdefg",3));
	 }

}
