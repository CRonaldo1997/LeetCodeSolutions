//Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.
//
//Examples:
//
//s = "leetcode"
//return 0.
//
//s = "loveleetcode",
//return 2.

import java.util.Arrays;
import java.util.Collections;

public class FirstUniqueCharacterinaString387 {
	public int firstUniqChar(String s) {
		if(s.length()==0){
			return -1;
		}
		
		if(s.length()==1){
			return 0;
		}
		
		for(int i=0; i<s.length(); i++){
			int count=0;
			for(int j=0; j<s.length(); j++){
				if(s.charAt(i)==s.charAt(j)){
					count++;
				}
			}
			if(count==1){
				return i;
			}
		}
		return -1;
	}
	
%%%%%%%%%%%%%%%%%% A better solution %%%%%%%%%%%%%%%%%
//	public int firstUniqChar(String s) {
//		int[] freqArray = new int[26];
//		for(int i=0; i<s.length(); i++){
//			freqArray[s.charAt(i)-'a']++;
//		}
//		
//		for(int j=0; j<s.length(); j++){
//			if(freqArray[s.charAt(j)-'a']==1){
//				return j;
//			}
//		}
//		return -1;
//	}
%%%%%%%%%%%%%%%%%% A better solution End %%%%%%%%%%%%%%
	
	public static void main(String[] aregs){
		FirstUniqueCharacterinaString387 fucis = new FirstUniqueCharacterinaString387();
		int index = fucis.firstUniqChar("abcacbefg");
		System.out.println(index);	
	}
}
