//Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.
//
//This is case sensitive, for example "Aa" is not considered a palindrome here.
//
//Note:
//Assume the length of given string will not exceed 1,010.
//
//Example:
//
//Input:
//"abccccdd"
//
//Output:
//7
//
//Explanation:
//One longest palindrome that can be built is "dccaccd", whose length is 7.



import java.util.HashSet;

public class longestPalindrome {
	
	public static int longestPalindrome(String s) {
		if(s.isEmpty()){
			return 0;
		}
		HashSet<Character> set = new HashSet<Character>();
		int pairCount = 0;
		for(int i=0; i<s.length(); i++){
			if(set.contains(s.charAt(i))){
				set.remove(s.charAt(i));
				pairCount++;
			}
			else{
				set.add(s.charAt(i));
			}
		}
		if(set.isEmpty()){
			return 2*pairCount;
		}
		return 2*pairCount+1;
	}
	
	public static void main(String[] args){
		System.out.println(longestPalindrome("dccaccd"));
	}

}
