import java.util.ArrayList;
import java.util.List;

//Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.
//
//push(x) -- Push element x onto stack.
//pop() -- Removes the element on top of the stack.
//top() -- Get the top element.
//getMin() -- Retrieve the minimum element in the stack.
//Example:
//MinStack minStack = new MinStack();
//minStack.push(-2);
//minStack.push(0);
//minStack.push(-3);
//minStack.getMin();   --> Returns -3.
//minStack.pop();
//minStack.top();      --> Returns 0.
//minStack.getMin();   --> Returns -2.

public class MinStack15 {

	List<Integer> list;


    /** initialize your data structure here. */
    public MinStack15() {
    	list = new ArrayList<Integer>();
    }
    
    public void push(int x) {
        list.add(x);
    }
    
    public void pop() {
    	int len = list.size();
    	list.remove(len-1);
    }
    
    public int top() {
        int len = list.size();
        return list.get(len-1);
    }
    
    public int getMin() {
    	int min = list.get(0);
    	for(int i:list){
    		if(i<min){
    			min = i;
    		}
    	}
    	return min;
    }
    
    public static void main(String[] args){
    	MinStack15 obj =new MinStack15();
    	obj.push(1);
    	obj.push(2);
    	obj.push(3);
    	obj.push(4);
    	System.out.println(obj.getMin());
    	obj.pop();
    	System.out.println(obj.top());
    }
}
