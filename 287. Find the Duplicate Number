//
//Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.
//
//Note:
//You must not modify the array (assume the array is read only).
//You must use only constant, O(1) extra space.
//Your runtime complexity should be less than O(n2).
//There is only one duplicate number in the array, but it could be repeated more than once.

public class FindDuplicateNumber287 {
	public static int findDuplicate(int[] nums) {
		 int[] numsClone = nums.clone();
		 int temp=0;
		 for(int i=0;i<numsClone.length-1;i++){  
		        for(int j=0;j<numsClone.length-1-i;j++){  
		        if(numsClone[j]>numsClone[j+1]){  
		            temp=numsClone[j];  
		            numsClone[j]=numsClone[j+1];  
		            numsClone[j+1]=temp;  
		        }  
		        }  
		    }
		 for(int k=0; k<numsClone.length-1; k++){
			 if(numsClone[k]==numsClone[k+1]){
				 return numsClone[k];
			 }
		 }
		 return 0;
	    }
	
	public static void main(String[] args){
		int[] array = {1,2,5,6,7,4,3,7};
		System.out.println(findDuplicate(array));
	}
}
